/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User.View;

import Model.ServerReceiveData;
import Model.ServerSendData;
import Model.User;
import User.Control.SelectPlayer_Thread;
import User.Control.UserControl;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class SelectPlayerFRM extends javax.swing.JFrame {

    /**
     * Creates new form SelectPlayerFRM
     */
    public UserControl contr;
    public User u;
    public DefaultTableModel model;
    public DefaultComboBoxModel cbmodel;
    public int count;
    SelectPlayer_Thread spt;
    public SelectPlayerFRM(UserControl contr, User u) {
        initComponents();
        cbmodel = (DefaultComboBoxModel) cb.getModel();
        model = (DefaultTableModel) tbl1.getModel();
        this.contr = contr;
        this.u = u;
        this.setTitle("User: "+ u.getUserName());
        System.out.println(contr.serverPort);
        this.setLocationRelativeTo(null);
                
        ServerReceiveData srd = new ServerReceiveData();
        srd.setSendto("u_searchPlayer"); srd.setUser(u);
        contr.SendData(srd);
        ServerSendData ssd = contr.ReceiveData();
        if(ssd.getSendto().equals("sv_searchPlayer"))
        updatetable(ssd.getAr());
        
        spt = new SelectPlayer_Thread(this);
        spt.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        cb = new javax.swing.JComboBox<>();
        l2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        b2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        b2.setText("Quay Lại");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        tbl1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stt", "Người chơi", "Trạng thái", "Điểm"
            }
        ));
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        cb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "9x9", "18x18", "4x4" }));

        l2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        l2.setText("Loại bàn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(l2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb)
                        .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        new HomeFRM(contr, u).setVisible(true);
        spt.stop();
        this.dispose();
    }//GEN-LAST:event_b2ActionPerformed

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        int slect = tbl1.getSelectedRow();
        String str = cbmodel.getSelectedItem()+"";
        this.count = 4;
        if(str.equals("4x4")) count=4;
        else{
            if(str.equals("9x9")) count=9;
            else count=18;
        }
        
        String status = model.getValueAt(slect,2)+"";
        if(status.equals("waitting")){
            User u = new User();
            this.u.getStepPlay().setCount(count);
            
            u.setUserName(model.getValueAt(slect,1)+"");
            ServerReceiveData srd = new ServerReceiveData();
            srd.setSendto("u_selectPlayer"); srd.setUser(this.u); srd.setUserRival(u);
            System.out.println(srd.getUserRival().getUserName());
            contr.SendData(srd);
        }
        else JOptionPane.showMessageDialog(rootPane, "Người chơi này đang chơi");
    }//GEN-LAST:event_tbl1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        ServerReceiveData srd = new ServerReceiveData();
        srd.setSendto("u_close"); srd.setUser(u);
        contr.SendData(srd);
        System.out.println("Game_online.User.View.SelectPlayerFRM.formWindowClosed()");
    }//GEN-LAST:event_formWindowClosing

    public void updatetable(ArrayList <User> ar){
        model.setRowCount(0);
        int stt=1 ;
        if(ar.size()>0){
            for(int i=0 ; i<ar.size() ; i++){
                User u = ar.get(i);
                if(!u.getUserName().equals(this.u.getUserName())){
                    int reconcile = u.getTotalMatch() - u.getTotalWin() - u.getTotalLost();

                    float point = (float) (u.getTotalWin() + 0.5*reconcile);
                    Object o[] = {stt,u.getUserName(),u.getStatus(),point+""};
                    model.addRow(o);
                    stt++;
                }
            }
        }
    }
    
    public int showMassenge(String nameOther , int count){
        int i = 3;
        i = JOptionPane.showConfirmDialog(rootPane, "Người chơi "+nameOther+""
                + " muốn thách đấu bạn! \n loại bàn " + count +"x"+count+ "Chấp nhận?");
        return i;
    }
    
    public void Massenge_reject(String userName){
        JOptionPane.showMessageDialog(rootPane, "Người chơi " + userName +" từ chối thách đấu !");
    }
    
    public void You_Played(){
        JOptionPane.showMessageDialog(rootPane, "Người chơi này đã chấp nhận \n chơi với người chơi khác");
    }
    
    public void PlayFRM(UserControl contr, User u ,int count){
        ServerReceiveData srd = new ServerReceiveData();
        srd.setSendto("u_getnewPort");
        contr.SendData(srd);
        
        ServerSendData ssd = contr.ReceiveData();
        if(ssd.getSendto().equals("sv_getnewPort")){
            this.contr = new UserControl(ssd.getUser().getUserPort());
        }
        new PlayFRM(this.contr , this.u ,count).setVisible(true);
        this.dispose();
        spt.stop();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectPlayerFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectPlayerFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectPlayerFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectPlayerFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new SelectPlayerFRM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b2;
    private javax.swing.JComboBox<String> cb;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l2;
    private javax.swing.JTable tbl1;
    // End of variables declaration//GEN-END:variables
}
